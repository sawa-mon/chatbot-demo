{"version":3,"sources":["assets/img/no-profile.jpg","assets/img/profilenone.png","dataset.js","components/AnswersList.jsx","components/Answer.jsx","components/Chats.jsx","components/Chat.jsx","components/Forms/Textinput.jsx","components/Forms/FormDialog.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","defaultDataset","answers","content","nextId","question","AnswersList","aContentOf","className","map","value","index","key","toString","select","useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginBottom","backgroundColor","Answer","contentOf","classes","Button","button","variant","onClick","height","padding","overflow","Chats","chatOf","List","chats","id","chat","text","type","Chat","chatTxt","isQuestion","ListItem","ListItemAvatar","Avatar","alt","src","NoProfile","profilenone","Textinput","props","TextField","fullWidth","label","margin","multiline","rows","onChange","FormDialog","inputName","event","setState","name","target","inputEmail","email","inputDescription","description","submitForm","payload","state","fetch","method","body","JSON","stringify","then","alert","handleClose","bind","Dialog","open","this","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","autoFocus","React","Component","App","useState","setAnswers","setChats","currentId","setCurrentId","dataset","setOpen","noneDisplay","setNoneDisplay","displayNextQuestion","nextQuestionId","nextDataset","addChats","selectAnswer","selectedAnswer","setTimeout","handleOpen","test","a","document","createElement","href","click","prevChats","useCallback","useEffect","scrollArea","getElementById","scrollTop","scrollHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60a7cfeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-profile.d819891b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profilenone.a990286c.png\";","const defaultDataset = {\n  \"init\": {\n      answers: [\n          {content: \"仕事を依頼したい\", nextId: \"job_offer\"},\n          {content: \"自転車のコミュニティってどんなことしてるの？\", nextId: \"community\"},\n          {content: \"まずはお話してみたい\", nextId: \"speak\"},\n          {content: \"お付き合いしたい\", nextId: \"dating\"},\n      ],\n      question: \"こんにちは！ご用件はなんでしょうか？\",\n  },\n  \"job_offer\": {\n      answers: [\n          {content: \"Webサイトを制作してほしい\", nextId: \"website\"},\n          {content: \"Webアプリを開発してほしい\", nextId: \"webapp\"},\n          {content: \"自動化ツールを作ってほしい\", nextId: \"automation_tool\"},\n          {content: \"その他\", nextId: \"other_jobs\"}\n      ],\n      question: \"どのようなお仕事でしょうか？\",\n  },\n  \"website\": {\n      answers: [\n          {content: \"問い合わせる\", nextId: \"contact\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"Webサイト制作についてですね。コチラからお問い合わせできます。\",\n  },\n  \"webapp\": {\n      answers: [\n          {content: \"問い合わせる\", nextId: \"contact\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"Webアプリ開発についてですね。コチラからお問い合わせできます。\",\n  },\n  \"automation_tool\": {\n      answers: [\n          {content: \"問い合わせる\", nextId: \"contact\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"自動化ツール開発についてですね。コチラからお問い合わせできます。\",\n  },\n  \"other_jobs\": {\n      answers: [\n          {content: \"問い合わせる\", nextId: \"contact\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"その他についてですね。コチラからお問い合わせできます。\",\n  },\n  \"community\": {\n      answers: [\n          {content: \"当コミュニティを表現した必見YouTube動画を見る\", nextId: \"https://www.youtube.com/watch?v=ACEBZ-KmuQo\"},\n          {content: \"走行会を実施しています。気になる方はこちらから\", nextId: \"community_activity\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"コミュニティ内で不定期に走行会などを実施しています。また、必見YouTube動画をご覧頂ければ概要をご覧頂けます。\",\n  },\n  \"speak\": {\n      answers: [\n          {content: \"どんな活動をしているのか気になる\", nextId: \"community\"},\n          {content: \"コミュニティがどういうものか気になる\", nextId: \"community_activity\"},\n          {content: \"直接お話してみたい\", nextId: \"dating\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n      ],\n      question: \"そうですね。どういったことをお聞きしたいですか？\",\n  },\n  \"community_activity\": {\n      answers: [\n          {content: \"BANDをダウンロードのうえ、加入申請して下さい\", nextId: \"https://band.us/n/a6aa454aE0W7J\"},\n          {content: \"まずは一回、走行会に参加してみたい\", nextId: \"cycling\"},\n          {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"コミュニティ運営を行っているアプリに加入頂くか、一度走行会に顔を出してみて下さい😉\",\n    },\n    \"dating\": {\n        answers: [\n            {content: \"DMする\", nextId: \"https://www.instagram.com/wasamonsan\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"まずは一緒に食事でもいかがですか？DMしてください😘\",\n    },\n    \"cycling\": {\n        answers: [\n        {content: \"詳細日実施日を問い合わせフォームから確認する\", nextId: \"contact\"},\n        {content: \"BANDをダウンロードのうえ、加入申請する\", nextId: \"https://band.us/n/a6aa454aE0W7J\"},\n        {content: \"最初の質問に戻る\", nextId: \"init\"}\n    ],\n    question: \"不定期での開催となるため直近の開催日程につきましてはお問い合わせフォームよりご確認願います。また、アプリメンバーに加入することで開催日の案内を受け取ることができますのでこちらもおすすめです。\",\n},\n\n}\n\nexport default defaultDataset","import React　from 'react'\nimport { Answer } from './index'\n\nconst AnswersList = (aContentOf) => {\n  return(\n    <div className=\"c-grid__answer\">\n      {aContentOf.answers.map((value, index) => {\n        return <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={aContentOf.select} />\n      })}\n    </div>\n  )\n}\n\nexport default AnswersList","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => ( // material-ui の見た目をカスタマイズする\n    createStyles({\n      \"button\": {\n        borderColor: '#499eff',\n        color: '#499eff',\n        fontWeight: 600,\n        marginBottom: '8px',\n        \"&:hover\": {\n          backgroundColor: '#FFB549',\n          color: '#fff',\n        },\n        \"&:active\": {\n          backgroundColor: '#FFB549',\n          color: '#fff'\n        }}\n      })\n));\n\nconst Answer = (contentOf) => {\n  const classes = useStyles();\n\n  return(\n    <Button\n      className={classes.button}\n      variant=\"outlined\" onClick={() => contentOf.select(contentOf.content, contentOf.nextId)}\n    >\n      {contentOf.content}\n    </Button>\n  )\n}\n\nexport default Answer","import React from 'react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {Chat} from \"./index\"\n\nconst useStyles = makeStyles(() => (\n  createStyles({\n    \"chats\": {\n      height: 400,\n      padding: '0',\n      overflow: 'auto'\n    }\n  })\n));\n\nconst Chats = (chatOf) => {\n  const classes = useStyles();\n  \n  return(\n    <List className={classes.chats} id={'scroll-area'}>\n      {chatOf.chats.map((chat, index) => {\n        return <Chat text={chat.text} type={chat.type} key={index.toString} />\n      })}\n    </List>\n  )\n}\n\nexport default Chats","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport NoProfile from '../assets/img/no-profile.jpg';\nimport profilenone from '../assets/img/profilenone.png';\n\nconst Chat = (chatTxt) => {\n  const isQuestion = (chatTxt.type === 'question');\n  const classes = isQuestion ? 'p-chat__row' : 'p-chat__reverse';\n\n  \n  return(\n    <ListItem className={classes}>\n    <ListItemAvatar>\n      {isQuestion ? (\n        <Avatar alt=\"icon\" src={NoProfile} />\n        ) : (\n        <Avatar alt=\"icon\" src={profilenone} /> \n      )}\n    </ListItemAvatar>\n  <div className=\"p-chat__bubble\">{chatTxt.text}</div>\n  </ListItem>\n  )\n\n}\n\nexport default Chat","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst Textinput = (props) => {\n  return(\n    <TextField\n      fullWidth={true}\n      label={props.label}\n      margin={\"dense\"}\n      multiline={props.multiline}\n      rows={props.rows}\n      value={props.value}\n      type={props.type}\n      onChange={props.onChange}\n    />\n  )\n}\n\nexport default Textinput","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './Textinput';\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\"\n    }\n    this.inputName = this.inputName.bind(this)\n    this.inputEmail = this.inputEmail.bind(this)\n    this.inputDescription = this.inputDescription.bind(this)\n  }\n\n  inputName = (event) => {\n    this.setState({ name: event.target.value})\n  }\n\n  inputEmail = (event) => {\n    this.setState({ email: event.target.value})\n  }\n\n  inputDescription = (event) => {\n    this.setState({ description: event.target.value})\n  }\n\n\n  submitForm = () => { //フォームバリデーションは未実装(textの有無、アドレスが正しいか？)\n    const name = this.state.name\n    const email = this.state.email\n    const description = this.state.description\n\n    const payload = {\n      text: '問い合わせが有りました\\n' +\n            'お名前：' + name + '\\n' +\n            'Email：' + email + '\\n' +\n            '問い合わせ内容：\\n' + description\n    }\n\n    const url = 'https://hooks.slack.com/services/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'\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(payload)\n    }).then(() => {\n      alert('送信が完了しました。折返しご連絡致します。')\n      this.setState({\n        name: \"\",\n        email: \"\",\n        description: \"\",\n      })\n      return this.props.handleClose()\n    })\n  }\n\n  render() {\n    return(\n      <Dialog\n      open={this.props.open}\n      onClose={this.props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"問い合わせフォーム\"}</DialogTitle>\n      <DialogContent>\n        <TextInput\n          label={\"お名前(必須)\"} multiline={false} rows={1}\n          value={this.state.name} type={\"text\"} onChange={this.inputName}\n        />\n        <TextInput\n          label={\"メールアドレス(必須)\"} multiline={false} rows={1}\n          value={this.state.email} type={\"text\"} onChange={this.inputEmail}\n        />\n        <TextInput\n          label={\"お問い合わせフォーム(必須)\"} multiline={true} rows={5}\n          value={this.state.description} type={\"text\"} onChange={this.inputDescription}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={this.props.handleClose} color=\"primary\">\n          キャンセル\n        </Button>\n        <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n          送信\n        </Button>\n      </DialogActions>\n    </Dialog>\n    )\n  }\n}","import React, {useState, useEffect, useCallback} from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css'\nimport { AnswersList, Chats } from \"./components/index\"\nimport FormDialog from './components/Forms/FormDialog';\n\n\nconst App = () => {\n    const [answers, setAnswers] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [currentId, setCurrentId] = useState(\"init\");\n    const dataset = defaultDataset;\n    const [open, setOpen] = useState(false);\n    const [noneDisplay, setNoneDisplay] = useState(false);\n\n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n      addChats({\n        text: nextDataset.question,\n        type: 'question'\n      })\n\n        setAnswers(nextDataset.answers)\n        setCurrentId(nextQuestionId)\n    }\n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true) {\n\n      case (nextQuestionId === 'init'):\n        setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 1000);\n        break;\n\n      case (nextQuestionId === 'contact'):\n        handleOpen();\n        break;\n      \n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n\n      default:\n        addChats({ \n        text: selectedAnswer,\n        type: 'answer'\n        });\n\n        setNoneDisplay(true);\n        setTimeout(() => (\n          displayNextQuestion(nextQuestionId, dataset[nextQuestionId])\n          ),1200)\n          break;\n        }\n\n  }\n\n  const addChats = (chat) => {\n    setChats(prevChats => {\n      return [...prevChats, chat]\n    })\n    setNoneDisplay(false);\n  }\n  \n  const handleOpen = () => {\n    setOpen(true)\n  };\n  \n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [setOpen]);\n  \n  useEffect(() => {\n    const initAnswer = \"\";\n    selectAnswer(initAnswer, currentId)\n  },[]);\n  \n  \n  useEffect(() => {\n    const scrollArea = document.getElementById('scroll-area')\n    if(scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  })\n\n  return (\n    <section className=\"c-section\">\n      <div className=\"c-box\">\n        <Chats chats={chats} />\n        {!noneDisplay && (\n          <AnswersList answers={answers} select={selectAnswer} />\n        )}\n        <FormDialog open={open} handleOpen={handleOpen} handleClose={handleClose} />\n      </div>\n    </section>\n    );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}