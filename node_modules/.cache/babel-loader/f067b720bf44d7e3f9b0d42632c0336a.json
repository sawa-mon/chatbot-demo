{"ast":null,"code":"var _jsxFileName = \"/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx\";\nimport React from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectAnswer = (selectedAnswer, nextQuestionId) => {\n      switch (true) {\n        case nextQuestionId === 'init':\n          break;\n\n        default:\n          const chat = {\n            text: selectedAnswer,\n            type: 'answer'\n          };\n          const chats = this.state.chats; //現在の状態を変数をもたせて取得\n\n          chats.push(chat); //chatsは最初は空の配列だが、\"chat\"の連想配列をpushしてやる\n          //stateを直接書き換える様な下記の記述は再レンダリングされない為NG！！\n          // chats: this.state.chats.push(chat)\n          //Reactでstateを置き換える時は必ずsetStateを使用して書き換える\n\n          this.setState({\n            chats: chats\n          });\n          break;\n      }\n    };\n\n    this.initAnswer = () => {\n      const initDataset = this.state.dataset[this.state.currentId];\n      const initAnswers = initDataset.answers;\n      this.setState({\n        answers: initAnswers\n      });\n    };\n\n    this.initAnswer = () => {\n      const initDataset = this.state.dataset[this.state.currentId];\n      const initAnswers = initDataset.answers;\n      this.setState({\n        answers: initAnswers\n      });\n    };\n\n    this.state = {\n      //以下、初期状態のstateの管理\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    this.initChats();\n    this.initAnswer();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx"],"names":["React","defaultDataset","AnswersList","Chats","App","Component","constructor","props","selectAnswer","selectedAnswer","nextQuestionId","chat","text","type","chats","state","push","setState","initAnswer","initDataset","dataset","currentId","initAnswers","answers","open","componentDidMount","initChats","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,oBAAnC;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,CAACC,cAAD,EAAiBC,cAAjB,KAAoC;AACjD,cAAO,IAAP;AACE,aAAMA,cAAc,KAAK,MAAzB;AACI;;AACJ;AACE,gBAAMC,IAAI,GAAG;AACXC,YAAAA,IAAI,EAAEH,cADK;AAEXI,YAAAA,IAAI,EAAE;AAFK,WAAb;AAKA,gBAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB,CANF,CAMkC;;AAChCA,UAAAA,KAAK,CAACE,IAAN,CAAWL,IAAX,EAPF,CAOmB;AACjB;AACA;AAEA;;AACA,eAAKM,QAAL,CAAc;AACZH,YAAAA,KAAK,EAAEA;AADK,WAAd;AAGE;AAlBN;AAoBD,KAhCkB;;AAAA,SAkCnBI,UAlCmB,GAkCN,MAAM;AACjB,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,OAAX,CAAmB,KAAKL,KAAL,CAAWM,SAA9B,CAApB;AACA,YAAMC,WAAW,GAAGH,WAAW,CAACI,OAAhC;AAEA,WAAKN,QAAL,CAAc;AACZM,QAAAA,OAAO,EAAGD;AADE,OAAd;AAGD,KAzCkB;;AAAA,SA2CnBJ,UA3CmB,GA2CN,MAAM;AACjB,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWK,OAAX,CAAmB,KAAKL,KAAL,CAAWM,SAA9B,CAApB;AACA,YAAMC,WAAW,GAAGH,WAAW,CAACI,OAAhC;AAEA,WAAKN,QAAL,CAAc;AACZM,QAAAA,OAAO,EAAED;AADG,OAAd;AAGD,KAlDkB;;AAEjB,SAAKP,KAAL,GAAa;AAAE;AACbQ,MAAAA,OAAO,EAAE,EADE;AAEXT,MAAAA,KAAK,EAAE,EAFI;AAGXO,MAAAA,SAAS,EAAE,MAHA;AAIXD,MAAAA,OAAO,EAAEnB,cAJE;AAKXuB,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AA2CGC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACA,SAAKR,UAAL;AACD;;AAGLS,EAAAA,MAAM,GAAI;AACR,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWQ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AApE8C","sourcesContent":["import React from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css'\nimport { AnswersList, Chats } from \"./components/index\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { //以下、初期状態のstateの管理\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    }\n  }\n\n  selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true) {\n      case (nextQuestionId === 'init'):\n          break;\n      default:\n        const chat = {\n          text: selectedAnswer,\n          type: 'answer'\n        }\n    \n        const chats = this.state.chats; //現在の状態を変数をもたせて取得\n        chats.push(chat) //chatsは最初は空の配列だが、\"chat\"の連想配列をpushしてやる\n        //stateを直接書き換える様な下記の記述は再レンダリングされない為NG！！\n        // chats: this.state.chats.push(chat)\n    \n        //Reactでstateを置き換える時は必ずsetStateを使用して書き換える\n        this.setState({\n          chats: chats\n        })\n          break;\n    }\n  }\n\n  initAnswer = () => {\n    const initDataset = this.state.dataset[this.state.currentId];\n    const initAnswers = initDataset.answers;\n    \n    this.setState({\n      answers : initAnswers\n    })\n  }\n\n  initAnswer = () => {\n    const initDataset = this.state.dataset[this.state.currentId];\n    const initAnswers = initDataset.answers;\n\n    this.setState({\n      answers: initAnswers\n    })\n  }\n\n      componentDidMount() {\n        this.initChats();\n        this.initAnswer()\n      }\n\n\n  render () {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers}/>\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}