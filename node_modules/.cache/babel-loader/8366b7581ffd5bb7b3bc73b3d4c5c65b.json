{"ast":null,"code":"var _jsxFileName = \"/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx\";\nimport React from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initAnswer = () => {\n      const initDataset = this.state.dataset[this.state.currentId];\n      const initAnswers = initDataset.answers;\n      this.setState({\n        answers: initAnswers\n      });\n    };\n\n    this.initAnswer = () => {\n      const initDataset = this.state.dataset[this.state.currentId];\n      const initAnswers = initDataset.answers;\n      this.setState({\n        answers: initAnswers\n      });\n    };\n\n    this.initChats = () => {\n      const initDataset = this.state.dataset[this.state.currentId];\n      const chat = {\n        text: initDataset.question,\n        type: 'question'\n      };\n      const chats = this.state.chats; //現在の状態を変数をもたせて取得\n\n      chats.push(chat); //chatsは最初は空の配列だが、\"chat\"の連想配列をpushしてやる\n      //stateを直接書き換える様な下記の記述は再レンダリングされない為NG！！\n      // chats: this.state.chats.push(chat)\n      //Reactでstateを置き換える時は必ずsetStateを使用して書き換える\n\n      this.setState({\n        chats: chats\n      });\n    };\n\n    this.state = {\n      //以下、初期状態のstateの管理\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    this.initChats();\n    this.initAnswer();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx"],"names":["React","defaultDataset","AnswersList","Chats","App","Component","constructor","props","initAnswer","initDataset","state","dataset","currentId","initAnswers","answers","setState","initChats","chat","text","question","type","chats","push","open","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,oBAAnC;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,UAXmB,GAWN,MAAM;AACjB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CAApB;AACA,YAAMC,WAAW,GAAGJ,WAAW,CAACK,OAAhC;AAEA,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAGD;AADE,OAAd;AAGD,KAlBkB;;AAAA,SAoBnBL,UApBmB,GAoBN,MAAM;AACjB,YAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CAApB;AACA,YAAMC,WAAW,GAAGJ,WAAW,CAACK,OAAhC;AAEA,WAAKC,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAED;AADG,OAAd;AAGD,KA3BkB;;AAAA,SA6BnBG,SA7BmB,GA6BP,MAAM;AAChB,YAAMP,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CAApB;AACA,YAAMK,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAET,WAAW,CAACU,QADP;AAEXC,QAAAA,IAAI,EAAE;AAFK,OAAb;AAKA,YAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWW,KAAzB,CAPgB,CAOgB;;AAChCA,MAAAA,KAAK,CAACC,IAAN,CAAWL,IAAX,EARgB,CAQC;AACjB;AACA;AAEA;;AACA,WAAKF,QAAL,CAAc;AACZM,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGD,KA7CkB;;AAEjB,SAAKX,KAAL,GAAa;AAAE;AACbI,MAAAA,OAAO,EAAE,EADE;AAEXO,MAAAA,KAAK,EAAE,EAFI;AAGXT,MAAAA,SAAS,EAAE,MAHA;AAIXD,MAAAA,OAAO,EAAEV,cAJE;AAKXsB,MAAAA,IAAI,EAAE;AALK,KAAb;AAOD;;AAsCGC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,SAAL;AACA,SAAKR,UAAL;AACD;;AAGLiB,EAAAA,MAAM,GAAI;AACR,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWW,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWI,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AA/D8C","sourcesContent":["import React from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css'\nimport { AnswersList, Chats } from \"./components/index\"\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { //以下、初期状態のstateの管理\n      answers: [],\n      chats: [],\n      currentId: \"init\",\n      dataset: defaultDataset,\n      open: false\n    }\n  }\n\n  initAnswer = () => {\n    const initDataset = this.state.dataset[this.state.currentId];\n    const initAnswers = initDataset.answers;\n    \n    this.setState({\n      answers : initAnswers\n    })\n  }\n\n  initAnswer = () => {\n    const initDataset = this.state.dataset[this.state.currentId];\n    const initAnswers = initDataset.answers;\n\n    this.setState({\n      answers: initAnswers\n    })\n  }\n\n  initChats = () => {\n    const initDataset = this.state.dataset[this.state.currentId];\n    const chat = {\n      text: initDataset.question,\n      type: 'question'\n    }\n\n    const chats = this.state.chats; //現在の状態を変数をもたせて取得\n    chats.push(chat) //chatsは最初は空の配列だが、\"chat\"の連想配列をpushしてやる\n    //stateを直接書き換える様な下記の記述は再レンダリングされない為NG！！\n    // chats: this.state.chats.push(chat)\n\n    //Reactでstateを置き換える時は必ずsetStateを使用して書き換える\n    this.setState({\n      chats: chats\n    })\n  }\n\n      componentDidMount() {\n        this.initChats();\n        this.initAnswer()\n      }\n\n\n  render () {\n    return (\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers}/>\n        </div>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}