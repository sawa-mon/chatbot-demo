{"ast":null,"code":"var _jsxFileName = \"/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from \"./components/index\";\nimport FormDialog from './components/Forms/FormDialog';\n\nconst App = () => {\n  const [answers, setAnswers] = useState([]);\n  const [chats, setChats] = useState([]);\n  const [currentId, setCurrentId] = useState(\"init\");\n  const dataset = defaultDataset;\n  const [open, setOpen] = useState(false);\n  const [noneDisplay, setNoneDisplay] = useState(true);\n\n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n    addChats({\n      text: nextDataset.question,\n      type: 'question'\n    });\n    setAnswers(nextDataset.answers);\n    setCurrentId(nextQuestionId);\n  };\n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch (true) {\n      case nextQuestionId === 'contact':\n        handleOpen();\n        break;\n\n      case /^https:*/.test(nextQuestionId):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n\n      default:\n        addChats({\n          text: selectedAnswer,\n          type: 'answer'\n        });\n        setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 1200);\n        setNoneDisplay(false);\n        break;\n    }\n  };\n\n  console.log();\n\n  const addChats = chat => {\n    setChats(prevChats => {\n      return [...prevChats, chat];\n    });\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n  useEffect(() => {\n    const initAnswer = \"\";\n    selectAnswer(initAnswer, currentId);\n  }, []);\n  useEffect(() => {\n    const scrollArea = document.getElementById('scroll-area');\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"c-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"c-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chats, {\n    chats: chats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), noneDisplay === true && /*#__PURE__*/React.createElement(AnswersList, {\n    noneDisplay: true,\n    answers: answers,\n    select: selectAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormDialog, {\n    open: open,\n    handleOpen: handleOpen,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sawadamakoto/PC/Github/chatbot-demo/src/App.jsx"],"names":["React","useState","useEffect","useCallback","defaultDataset","AnswersList","Chats","FormDialog","App","answers","setAnswers","chats","setChats","currentId","setCurrentId","dataset","open","setOpen","noneDisplay","setNoneDisplay","displayNextQuestion","nextQuestionId","nextDataset","addChats","text","question","type","selectAnswer","selectedAnswer","handleOpen","test","a","document","createElement","href","target","click","setTimeout","console","log","chat","prevChats","handleClose","initAnswer","scrollArea","getElementById","scrollTop","scrollHeight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport defaultDataset from \"./dataset\";\nimport './assets/styles/style.css'\nimport { AnswersList, Chats } from \"./components/index\"\nimport FormDialog from './components/Forms/FormDialog';\n\n\nconst App = () => {\n    const [answers, setAnswers] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [currentId, setCurrentId] = useState(\"init\");\n    const dataset = defaultDataset;\n    const [open, setOpen] = useState(false);\n    const [noneDisplay, setNoneDisplay] = useState(true);\n\n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n      addChats({\n        text: nextDataset.question,\n        type: 'question'\n      })\n\n        setAnswers(nextDataset.answers)\n        setCurrentId(nextQuestionId)\n    }\n\n  const selectAnswer = (selectedAnswer, nextQuestionId) => {\n    switch(true) {\n\n      case (nextQuestionId === 'contact'):\n        handleOpen();\n        break;\n      \n      case (/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a');\n        a.href = nextQuestionId;\n        a.target = '_blank';\n        a.click();\n        break;\n\n      default:\n        addChats({ \n        text: selectedAnswer,\n        type: 'answer'\n        });\n\n\n        setTimeout(() => (\n          displayNextQuestion(nextQuestionId, dataset[nextQuestionId])\n          ),1200)\n          setNoneDisplay(false);\n          break;\n    }\n  }\nconsole.log()\n\n  const addChats = (chat) => {\n    setChats(prevChats => {\n      return [...prevChats, chat]\n    })\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  };\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [setOpen]);\n\n  useEffect(() => {\n    const initAnswer = \"\";\n    selectAnswer(initAnswer, currentId)\n},[]);\n\n\n  useEffect(() => {\n    const scrollArea = document.getElementById('scroll-area')\n    if(scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  })\n\n\n  return (\n    <section className=\"c-section\">\n      <div className=\"c-box\">\n        <Chats chats={chats} />\n        {noneDisplay === true && (\n          <AnswersList noneDisplay={true} answers={answers} select={selectAnswer} />\n        )}\n        <FormDialog open={open} handleOpen={handleOpen} handleClose={handleClose} />\n      </div>\n    </section>\n    );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}