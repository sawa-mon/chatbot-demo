{"ast":null,"code":"import _classCallCheck from\"/Users/sawadamakoto/PC/Github/chatbot-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sawadamakoto/PC/Github/chatbot-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/sawadamakoto/PC/Github/chatbot-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sawadamakoto/PC/Github/chatbot-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sawadamakoto/PC/Github/chatbot-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import TextInput from'./Textinput';var FormDialog=/*#__PURE__*/function(_React$Component){_inherits(FormDialog,_React$Component);var _super=_createSuper(FormDialog);function FormDialog(props){var _this;_classCallCheck(this,FormDialog);_this=_super.call(this,props);_this.inputName=function(event){_this.setState({name:event.target.value});};_this.inputEmail=function(event){_this.setState({email:event.target.value});};_this.inputDescription=function(event){_this.setState({description:event.target.value});};_this.submitForm=function(){//フォームバリデーションは未実装(textの有無、アドレスが正しいか？)\nvar name=_this.state.name;var email=_this.state.email;var description=_this.state.description;var payload={text:'問い合わせが有りました\\n'+'お名前：'+name+'\\n'+'Email：'+email+'\\n'+'問い合わせ内容：\\n'+description};var url='https://hooks.slack.com/services/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';fetch(url,{method:'POST',body:JSON.stringify(payload)}).then(function(){alert('送信が完了しました。折返しご連絡致します。');_this.setState({name:\"\",email:\"\",description:\"\"});return _this.props.handleClose();});};_this.state={name:\"\",email:\"\",description:\"\"};_this.inputName=_this.inputName.bind(_assertThisInitialized(_this));_this.inputEmail=_this.inputEmail.bind(_assertThisInitialized(_this));_this.inputDescription=_this.inputDescription.bind(_assertThisInitialized(_this));return _this;}_createClass(FormDialog,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Dialog,{open:this.props.open,onClose:this.props.handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-title\"},\"問い合わせフォーム\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(TextInput,{label:\"お名前(必須)\",multiline:false,rows:1,value:this.state.name,type:\"text\",onChange:this.inputName}),/*#__PURE__*/React.createElement(TextInput,{label:\"メールアドレス(必須)\",multiline:false,rows:1,value:this.state.email,type:\"text\",onChange:this.inputEmail}),/*#__PURE__*/React.createElement(TextInput,{label:\"お問い合わせフォーム(必須)\",multiline:true,rows:5,value:this.state.description,type:\"text\",onChange:this.inputDescription})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:this.props.handleClose,color:\"primary\"},\"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"),/*#__PURE__*/React.createElement(Button,{onClick:this.submitForm,color:\"primary\",autoFocus:true},\"\\u9001\\u4FE1\")));}}]);return FormDialog;}(React.Component);export{FormDialog as default};","map":{"version":3,"sources":["/Users/sawadamakoto/PC/Github/chatbot-demo/src/components/Forms/FormDialog.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextInput","FormDialog","props","inputName","event","setState","name","target","value","inputEmail","email","inputDescription","description","submitForm","state","payload","text","url","fetch","method","body","JSON","stringify","then","alert","handleClose","bind","open","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './Textinput';\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      description: \"\"\n    }\n    this.inputName = this.inputName.bind(this)\n    this.inputEmail = this.inputEmail.bind(this)\n    this.inputDescription = this.inputDescription.bind(this)\n  }\n\n  inputName = (event) => {\n    this.setState({ name: event.target.value})\n  }\n\n  inputEmail = (event) => {\n    this.setState({ email: event.target.value})\n  }\n\n  inputDescription = (event) => {\n    this.setState({ description: event.target.value})\n  }\n\n\n  submitForm = () => { //フォームバリデーションは未実装(textの有無、アドレスが正しいか？)\n    const name = this.state.name\n    const email = this.state.email\n    const description = this.state.description\n\n    const payload = {\n      text: '問い合わせが有りました\\n' +\n            'お名前：' + name + '\\n' +\n            'Email：' + email + '\\n' +\n            '問い合わせ内容：\\n' + description\n    }\n\n    const url = 'https://hooks.slack.com/services/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'\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(payload)\n    }).then(() => {\n      alert('送信が完了しました。折返しご連絡致します。')\n      this.setState({\n        name: \"\",\n        email: \"\",\n        description: \"\",\n      })\n      return this.props.handleClose()\n    })\n  }\n\n  render() {\n    return(\n      <Dialog\n      open={this.props.open}\n      onClose={this.props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"問い合わせフォーム\"}</DialogTitle>\n      <DialogContent>\n        <TextInput\n          label={\"お名前(必須)\"} multiline={false} rows={1}\n          value={this.state.name} type={\"text\"} onChange={this.inputName}\n        />\n        <TextInput\n          label={\"メールアドレス(必須)\"} multiline={false} rows={1}\n          value={this.state.email} type={\"text\"} onChange={this.inputEmail}\n        />\n        <TextInput\n          label={\"お問い合わせフォーム(必須)\"} multiline={true} rows={5}\n          value={this.state.description} type={\"text\"} onChange={this.inputDescription}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={this.props.handleClose} color=\"primary\">\n          キャンセル\n        </Button>\n        <Button onClick={this.submitForm} color=\"primary\" autoFocus>\n          送信\n        </Button>\n      </DialogActions>\n    </Dialog>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}